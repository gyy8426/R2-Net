#!/usr/bin/env bash

# This is a script that will train all of the models for scene graph classification and then evaluate them.
export PYTHONPATH=/home/guoyuyu/code/code_by_other/neural-motifs_graphcnn:/home/guoyuyu/lib/python_lib/coco/PythonAPI
export CUDA_VISIBLE_DEVICES=1
export SAVE_MODEL_PATH=/mnt/data/guoyuyu/datasets/visual_genome/model/neural-motifs_graphcnn/
if [ $1 == "0" ]; then
    echo "TRAINING THE BASELINE"
    python3 models/train_rels.py -m sgcls -model motifnet -nl_obj 0 -nl_edge 0 -b 6 \
    -clip 5 -p 100 -pooling_dim 4096 -lr 1e-3 -ngpu 1 -ckpt checkpoints/vgdet/vg-24.tar -save_dir checkpoints/baseline2 \
    -nepoch 50 -use_bias
elif [ $1 == "1" ]; then
    echo "TRAINING MESSAGE PASSING"
    python3 models/train_rels.py -m sgcls -model stanford -b 6 -p 100 -lr 1e-3 -ngpu 1 -clip 5 \
    -ckpt checkpoints/vgdet/vg-24.tar -save_dir checkpoints/stanford2
elif [ $1 == "2" ]; then
    echo "TRAINING MOTIFNET"
    python3 models/train_rels.py -m sgcls -model motifnet -order leftright -nl_obj 2 -nl_edge 4 -b 6 -clip 5 \
        -p 100 -hidden_dim 512 -pooling_dim 2048 -lr 1e-3 -ngpu 1 -ckpt /home/guoyuyu/code/code_by_other/neural-motifs_nongt/checkpoints/vgdet_res101_layer4_finished/vg-24.tar \
        -save_dir checkpoints/motifnet2_sgcls_res101_layer4_24 -nepoch 50 -use_bias -resnet -need_bg -bg_num_rel 0
elif [ $1 == "3" ]; then
    echo "TRAINING MOTIFNET" 
    python3 -u models/train_rels.py -m sgcls -model motifnet -order leftright -nl_obj 2 -nl_edge 4 -nl_adj 0 -b 6 -clip 5\
        -pooling_dim 2048 -hidden_dim 512 -adj_embed_dim 512 \
        -lr 6e-3 -ngpu 1 -ckpt /home/guoyuyu/code/code_by_other/neural-motifs_nongt/checkpoints/vgdet_res101_layer4_finished/vg-24.tar \
        -save_dir  ${SAVE_MODEL_PATH}/checkpoints/obj2_edg4_nore_gcn1_adj0_graph3_rel_1_adjsoft_embed_stack_softadjmat_nopassedggcnembed_lr6e3 \
        -nepoch 50 -resnet -p 100 -use_bias \
        -with_adj_mat -bg_num_graph 3 -bg_num_rel -1 -with_gcn -with_biliner_score -gcn_adj_type soft -where_gcn 'stack'
elif [ $1 == "4" ]; then
    echo "TRAINING MOTIFNET"
    python3 -u models/train_rels.py -m sgcls -model motifnet -order leftright -nl_obj 2 -nl_edge 4 -nl_adj 0 -b 24 -clip 5\
        -pooling_dim 2048 -hidden_dim 512 -adj_embed_dim 512 \
        -lr 2e-2 -ngpu 1 -ckpt /home/guoyuyu/code/code_by_other/neural-motifs_nongt/checkpoints/vgdet_res101_layer4_finished/vg-24.tar \
        -save_dir  ${SAVE_MODEL_PATH}/checkpoints/obj2_edg4_nore_gcn1_adj0_graph2_rel1_adjsoft_embed_parall_softadjmat_nopassedggcnembed_lr2e2  -nepoch 50 -resnet -p 100 -use_bias\
        -with_adj_mat -bg_num_graph 2 -bg_num_rel 1 -with_gcn -with_biliner_score -gcn_adj_type soft -where_gcn parall -pass_embed_togcn
elif [ $1 == "5" ]; then
    echo "TRAINING MOTIFNET"
    python3 -u models/train_rels.py -m detclass -model motifnet -order leftright -nl_obj 2 -nl_edge 4 -nl_adj 0 -b 32 -clip 5\
        -pooling_dim 2048 -hidden_dim 512 -adj_embed_dim 512 \
        -lr 1e-3 -ngpu 1 -ckpt /home/guoyuyu/code/code_by_other/neural-motifs_nongt/checkpoints/vgdet_res101_layer4_finished/vg-24.tar \
        -save_dir ${SAVE_MODEL_PATH}/checkpoints/detclass_blstm_gcn_lstm_stack_softgcn  -nepoch 50 -resnet -p 100 -use_bias\
        -with_adj_mat -bg_num_graph 2 -bg_num_rel 0 -with_gcn -with_biliner_score -gcn_adj_type soft -pass_embed_togcn -where_gcn 'stack' 
elif [ $1 == "6" ]; then
    echo "TRAINING MOTIFNET"
    python3 -u models/train_rels.py -m sgcls -model motifnet -order leftright -nl_obj 2 -nl_edge 2 -nl_adj 0 -b 24 -clip 5\
        -pooling_dim 2048 -hidden_dim 512 \
        -lr 1e-3 -ngpu 1 -ckpt /home/guoyuyu/code/code_by_other/neural-motifs_nongt/checkpoints/vgdet_res101_layer4_finished/vg-24.tar \
        -save_dir checkpoints/obj2_edgunionall_gcn0_graph3_rel0_adjsoft_embed_softadjmat_drop01_withatt  -nepoch 50 -resnet -p 100 -use_bias\
        -bg_num_graph 3 -bg_num_rel 0 -with_adj_mat -with_biliner_score -gcn_adj_type soft -edge_ctx_type 'union' 
fi
